local player = game:GetService("Players").LocalPlayer
local replicatedStorage = game:GetService("ReplicatedStorage")
local spinRemote = replicatedStorage:WaitForChild("ClientRemotes"):WaitForChild("RaceSpinHandler")
local webhookURL = "https://discord.com/api/webhooks/1306244225725370471/wFVYW4SdmUMhvPOxqTY0VncLWLEtArsrGs3lnzSu38aKpHdlP84FD6IbcWCgqJ5Z1wyS"

-- Whitelisted races
local whitelistedRaces = {
    ["Ascended"] = true,
    ["Arch"] = true,
    ["Chtharim"] = true,
    ["Darkarch"] = true,
    ["Descended"] = true,
    ["Divinari"] = true,
    ["Oni"] = true,
    ["Seer"] = true,
    ["Commander"] = true,
    ["Starborn"] = true,
    ["Machine"] = true
}

-- Path to the ContextName where spin results are displayed
local spinResultPath = player.PlayerGui.GameUI.Spin.Spinner.CurrentTemplate.SpinTemplate.ID.ContentText

-- Send a local notification
local function sendNotification(title, text)
    game:GetService("StarterGui"):SetCore("SendNotification", {
        Title = title;
        Text = text;
        Duration = 2;
    })
end

-- Discord webhook notifier
local function sendDiscordNotification(race)
    local data = {
        ["username"] = "Race Spinner Notifier",
        ["embeds"] = {{
            ["title"] = "**Whitelisted Race Obtained!**",
            ["description"] = "Successfully rolled: " .. race,
            ["color"] = 65280,  -- Green color
            ["footer"] = {
                ["text"] = "Roblox Race Spinner Notifier",
            },
            ["timestamp"] = os.date("!%Y-%m-%dT%H:%M:%SZ")  -- UTC time
        }}
    }

    local jsonData = game:GetService("HttpService"):JSONEncode(data)

    pcall(function()
        syn.request({
            Url = webhookURL,
            Method = "POST",
            Headers = {
                ["Content-Type"] = "application/json"
            },
            Body = jsonData
        })
    end)
end

-- Auto spinner function
local function startAutoSpinner()
    while true do
        -- Fire the spin remote
        spinRemote:FireServer()
        wait(0.1)  -- Small delay to prevent excessive spinning
        
        -- Check the spin result
        local currentRace = spinResultPath.Text
        if whitelistedRaces[currentRace] then
            sendNotification("Race Spin", "Obtained whitelisted race: " .. currentRace)
            sendDiscordNotification(currentRace)
            break  -- Stop spinning if a whitelisted race is obtained
        end
    end
end

-- Start the auto spinner
startAutoSpinner()
