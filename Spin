-- Configuration
local webhookURL = "https://discord.com/api/webhooks/1306244225725370471/wFVYW4SdmUMhvPOxqTY0VncLWLEtArsrGs3lnzSu38aKpHdlP84FD6IbcWCgqJ5Z1wyS"

local whitelistedRaces = {
    ["Ascended"] = true,
    ["Arch"] = true,
    ["Chtharim"] = true,
    ["Darkarch"] = true,
    ["Descended"] = true,
    ["Divinari"] = true,
    ["Oni"] = true,
    ["Starborn"] = true,
    ["Seer"] = true,
    ["Commander"] = true
}

local contextPath = game:GetService("Players").LocalPlayer.PlayerGui.GameUI.SlotFrame.CurrentRaceSlotFrame.CurrentElement.ID
local remote = game:GetService("ReplicatedStorage"):WaitForChild("ClientRemotes"):WaitForChild("RaceSpinHandler")

-- Function to send a Discord notification
local function sendDiscordNotification(status, details)
    local data = {
        ["username"] = "Race Spinner",
        ["embeds"] = {{
            ["title"] = "**Race Roll Result: " .. status .. "**",
            ["description"] = details,
            ["color"] = 65280,  -- Green color
            ["footer"] = {
                ["text"] = "Roblox Auto Spinner",
            },
            ["timestamp"] = os.date("!%Y-%m-%dT%H:%M:%SZ")
        }}
    }

    local jsonData = game:GetService("HttpService"):JSONEncode(data)
    pcall(function()
        syn.request({
            Url = webhookURL,
            Method = "POST",
            Headers = { ["Content-Type"] = "application/json" },
            Body = jsonData
        })
    end)
end

-- Auto Spinner Loop
while true do
    -- Wait for context path to exist
    repeat wait() until contextPath and contextPath:IsA("TextLabel") and contextPath:FindFirstChild("ContextName")
    
    -- Fire the race spin remote
    remote:FireServer()
    
    -- Wait briefly for the result to be available
    wait(1)
    
    -- Check the current race from the ContextName
    local currentRace = contextPath.ContextName.Text
    print("Rolled Race: " .. currentRace)  -- Debugging output

    -- Check if the rolled race is whitelisted
    if whitelistedRaces[currentRace] then
        sendDiscordNotification("Whitelisted Race Obtained", "You rolled: " .. currentRace)
        break  -- Stop the loop since we found a whitelisted race
    end
    
    -- Handle potential deletion of path (if deleted, loop will retry the `repeat` block)
    if not contextPath.ContextName then
        print("Path does not exist, waiting for it to reappear...")
    end
end
