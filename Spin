-- Webhook URL
local webhookURL = "https://discord.com/api/webhooks/1306244225725370471/wFVYW4SdmUMhvPOxqTY0VncLWLEtArsrGs3lnzSu38aKpHdlP84FD6IbcWCgqJ5Z1wyS"

-- Whitelisted Races
local whitelistedRaces = {
    "Ascended", "Arch", "Chtharim", "Darkarch", "Descended", 
    "Divinari", "Oni", "Starborn", "Seer", "Commander"
}

-- Remote path
local remote = game:GetService("ReplicatedStorage"):WaitForChild("ClientRemotes"):WaitForChild("RaceSpinHandler")

-- ContextName Path
local contextPath = game:GetService("Players").LocalPlayer.PlayerGui.GameUI.SlotFrame.CurrentRaceSlotFrame.CurrentElement.ID

-- Function to check if race is whitelisted
local function isWhitelisted(race)
    for _, v in ipairs(whitelistedRaces) do
        if v == race then
            return true
        end
    end
    return false
end

-- Function to send Discord notification
local function sendDiscordNotification(race)
    local data = {
        ["username"] = "Race Spinner",
        ["embeds"] = {{
            ["title"] = "**Whitelisted Race Obtained**",
            ["description"] = "Congratulations! You've rolled a whitelisted race: **" .. race .. "**",
            ["color"] = 65280,  -- Green color for success
            ["footer"] = {
                ["text"] = "Auto Spinner Notifier",
            },
            ["timestamp"] = os.date("!%Y-%m-%dT%H:%M:%SZ")  -- UTC time
        }}
    }

    local jsonData = game:GetService("HttpService"):JSONEncode(data)

    pcall(function()
        syn.request({
            Url = webhookURL,
            Method = "POST",
            Headers = { ["Content-Type"] = "application/json" },
            Body = jsonData
        })
    end)
end

-- Main spinning loop
while true do
    -- Check if the context path exists before proceeding
    while not pcall(function() return contextPath.ContextName end) do
        wait(0.1)  -- Wait until path is valid
    end

    -- Get the current race name from the ContextName
    local currentRace = contextPath.ContextName

    -- Check if the race is whitelisted
    if isWhitelisted(currentRace) then
        sendDiscordNotification(currentRace)  -- Send a Discord notification
        break  -- Stop the loop
    else
        -- Fire the remote to spin again if race is not whitelisted
        remote:FireServer()
        wait(0.1)  -- Small delay to avoid spamming too fast
    end
end
