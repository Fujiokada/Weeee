-- Webhook URL
local webhookURL = "https://discord.com/api/webhooks/1306244225725370471/wFVYW4SdmUMhvPOxqTY0VncLWLEtArsrGs3lnzSu38aKpHdlP84FD6IbcWCgqJ5Z1wyS"

-- Define whitelisted races
local whitelistedRaces = {
    "Ascended", "Arch", "Chtharim", "Darkarch", "Descended",
    "Divinari", "Oni", "Starborn", "Seer", "Commander"
}

-- Race spin remote
local raceSpinRemote = game:GetService("ReplicatedStorage"):WaitForChild("ClientRemotes"):WaitForChild("RaceSpinHandler")

-- Function to send Discord notification
local function sendDiscordNotification(race)
    local data = {
        ["username"] = "Race Spinner",
        ["embeds"] = {{
            ["title"] = "**Whitelisted Race Obtained**",
            ["description"] = "Rolled race: " .. race,
            ["color"] = 65280,  -- Green
            ["footer"] = { ["text"] = "Roblox Auto Spinner Notifier" },
            ["timestamp"] = os.date("!%Y-%m-%dT%H:%M:%SZ")
        }}
    }

    local jsonData = game:GetService("HttpService"):JSONEncode(data)

    pcall(function()
        syn.request({
            Url = webhookURL,
            Method = "POST",
            Headers = { ["Content-Type"] = "application/json" },
            Body = jsonData
        })
    end)
end

-- Auto spinner function
local spinning = true
while spinning do
    -- Fire the race spin remote
    raceSpinRemote:FireServer()
    wait(0.5)  -- Adjust wait time as necessary

    -- Refresh path to get the current rolled race each time
    local currentRaceSlotFrame = game:GetService("Players").LocalPlayer.PlayerGui.GameUI.SlotFrame.CurrentRaceSlotFrame
    if currentRaceSlotFrame and currentRaceSlotFrame:FindFirstChild("CurrentElement") then
        local rolledRace = currentRaceSlotFrame.CurrentElement.ID.Value

        -- Check if the rolled race is in the whitelist
        for _, race in ipairs(whitelistedRaces) do
            if rolledRace == race then
                spinning = false  -- Stop spinning when a whitelisted race is found
                sendDiscordNotification(rolledRace)
                break
            end
        end
    end
end
