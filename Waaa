-- Services and Variables
local player = game:GetService("Players").LocalPlayer
local StarterGui = game:GetService("StarterGui")
local HttpService = game:GetService("HttpService")
local UserInputService = game:GetService("UserInputService")
local virtualInputManager = game:GetService("VirtualInputManager")
local debrisHolder = workspace:WaitForChild("debrisHolder")

local toggle = true  -- Autofarming toggle
local respawnInProgress = false
local floatName = "FloatingPlatform"
local questNpcPosition = Vector3.new(232, 3, -703)  -- NPC position
local questNpcPrompt = workspace.NPCs.Agor.ProximityPrompt
local questCheckPath = player.PlayerGui.GameUI.Quests.QuestHolder.Quest.QuestName
local dialoguePath = player.PlayerGui.GameUI.Dialogue.ScrollingFrame
local questEnemies = {"Gravitron Soul", "Time Soul", "Light Soul"}
local webhookURL = "YOUR_DISCORD_WEBHOOK_URL"  -- Replace with your Discord webhook URL

-- Utility Functions
local function sendNotification(title, text)
    StarterGui:SetCore("SendNotification", { Title = title; Text = text; Duration = 2 })
end

local function isCharacterAlive()
    local character = workspace:FindFirstChild(player.Name)
    return character and character:FindFirstChild("Customizations")
end

local function respawnCharacter()
    if not isCharacterAlive() and not respawnInProgress then
        respawnInProgress = true
        game:GetService("ReplicatedStorage").ClientRemotes.SpawnHandler:FireServer(1)

        while not isCharacterAlive() do
            wait(0.5)
        end

        respawnInProgress = false
    end
end

local function createFloatingPlatform()
    local character = player.Character
    if character and not character:FindFirstChild(floatName) then
        local Float = Instance.new('Part')
        Float.Name = floatName
        Float.Parent = character
        Float.Transparency = 1
        Float.Size = Vector3.new(2, 0.2, 1.5)
        Float.Anchored = true

        game:GetService("RunService").Heartbeat:Connect(function()
            if character and character:FindFirstChild("HumanoidRootPart") then
                Float.CFrame = character.HumanoidRootPart.CFrame * CFrame.new(0, -3.1, 0)
            else
                Float:Destroy()
            end
        end)
    end
end

local function hasStrongSoulQuest()
    local quest = questCheckPath:FindFirstChild("ContentText")
    return quest and quest.Text == "Defeat Strong Souls"
end

local function fireProximityPrompt(prompt)
    if prompt and prompt:IsA("ProximityPrompt") then
        prompt:InputHoldBegin()
        wait(0.5)
        prompt:InputHoldEnd()
    end
end

local function isQuestCompletionDialogue()
    return dialoguePath:FindFirstChild("ActiveQuest") ~= nil
end

local function isQuestAvailableDialogue()
    return dialoguePath:FindFirstChild("AvailableQuest") ~= nil
end

local function completeQuest()
    local dialogueHandler = game:GetService("ReplicatedStorage").ClientRemotes.DialogueHandler
    for i = 1, 2 do
        dialogueHandler:FireServer(2)
        wait(0.5)
    end
end

local function takeOrRetakeQuest()
    local dialogueHandler = game:GetService("ReplicatedStorage").ClientRemotes.DialogueHandler
    for i = 1, 4 do
        dialogueHandler:FireServer(1)
        wait(0.5)
    end
end

local function equipTool(toolName)
    local tool = player.Backpack:FindFirstChild(toolName)
    if tool then
        tool.Parent = player.Character
    end
end

local function unequipTool()
    for _, tool in ipairs(player.Character:GetChildren()) do
        if tool:IsA("Tool") then
            tool.Parent = player.Backpack
        end
    end
end

local function teleportBehind(target)
    if target and target:FindFirstChild("HumanoidRootPart") then
        player.Character:SetPrimaryPartCFrame(target.HumanoidRootPart.CFrame * CFrame.new(0, 0, 7):LookAt(target.HumanoidRootPart.Position))
    end
end

local function isQuestEnemy(character)
    for _, name in ipairs(questEnemies) do
        if character.Name:match(name) then
            return true
        end
    end
    return false
end

local function combatWithEnemy(target)
    equipTool("Katana")
    while target and target.Parent and target:FindFirstChild("Humanoid") and target.Humanoid.Health > 0 do
        teleportBehind(target)
        equipTool("Katana")
        virtualInputManager:SendMouseButtonEvent(1095, 530, 0, true, game, 0)
        wait(0.05)
        virtualInputManager:SendMouseButtonEvent(1095, 530, 0, false, game, 0)
        wait(0.5)
    end
    unequipTool()
end

local function farmQuestEnemies()
    for _, enemy in ipairs(workspace.AiCharacters:GetChildren()) do
        if isQuestEnemy(enemy) and enemy:FindFirstChild("Humanoid") and enemy.Humanoid.Health > 0 then
            combatWithEnemy(enemy)
        end
    end
end

-- Autofarming Loop
spawn(function()
    while true do
        wait(1)
        if toggle and isCharacterAlive() then
            respawnCharacter()
            createFloatingPlatform()
            if not hasStrongSoulQuest() then
                fireProximityPrompt(questNpcPrompt)
                takeOrRetakeQuest()
            end
            farmQuestEnemies()
        end
    end
end)

-- Toggle Autofarming
UserInputService.InputBegan:Connect(function(input, gameProcessedEvent)
    if not gameProcessedEvent and input.KeyCode == Enum.KeyCode.T then
        toggle = not toggle
        sendNotification("Toggle", "Auto-farming " .. (toggle and "enabled" or "disabled"))
    end
end)
